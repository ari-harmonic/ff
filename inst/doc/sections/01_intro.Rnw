\section{Introduction}

A current limitation of \R{} \citep{R} is that it can only address objects that fit in the available virtual memory space, currently 2-4 GB on 32-bit systems. 
Consequently the theoretical maximum length of a vector is $2^{31}$-1.
The constraints on 64-bit systems are less severe (8 GB) but still limited, and cannot cope with very large data sets \citep{Radmin}. 

The \rc{ff} package is designed to overcome this limitation. 
It extends the \R{} system by making use of a new container type in which data is stored on native binary ``flat files'' in persistent storage (hard disk, CD, DVD, etc.) rather than in the main memory.
The package enables one to work on several very large data files simultaneously.
In effect it allows one to address very large vectors or arrays which do not fit in the \R{} runtime environment. 
The idea is that one can read from and write to the flat files, and operate on the parts that have been loaded into \R{}. 
From the user's point of view the \rc{ff} objects appear to be ordinary \R{} vectors or arrays that are accessed using the usual index operators, despite the fact that the full \rc{ff} object is not resident in memory. 
The exchange of data between virtual memory and the storage device is achieved via memory mapped pages of binary files.

The \rc{ff} package comprises two layers; a low-level layer written in C++, and a high-level layer in \R{}. 
The current version of the package is 1.0 (June 30, 2007) and was prepared for the \textbf{useR! 2007} (\textit{http://www.user2007.org/}) programming competition. 
It makes use of platform-specific facilities and has been ported and tested on the following platforms: Windows, Linux, Mac OS X and FreeBSD (other BSD derivatives have not been tested but are expected to work). 
At present, support is limited to numerical data (i.e. double data type).

Section 2 describes how to get started and the usage of the package. 
It also contains examples of application involving a large data set. 
Included here is an illustration of how \rc{ff} can extend the scope of the package \rc{biglm} \citep{biglm} in that it allows one to work with even larger data sets. 
The architecture behind the \rc{ff} package is described in Section 3. 
Possible extensions of the \rc{ff} package are listed in Section 4. 

